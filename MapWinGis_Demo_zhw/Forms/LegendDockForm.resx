<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/gAAC7W4WOu5uF1rubhh27W8Xce1vF1fwbhQzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADrbBQa7m4Xku1vGOvtbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbhjj7G8XiO5m
        EQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/gAAC3XUmeOxuGPXtbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1v
        GP/tbxj/7W4Y7uxuGF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA73AQELWGUMricyH/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1v
        GP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1uGKv/bQAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPRvFhd7novupI5j/+1vGP/tbxj/7W8Y/+1vGP/tbxj/03kz/8x8
        OP/tbxj/7W8Y/9R5Mv/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+xvGMv/ZhoKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADvcBAQmJNt4kK3x//tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1v
        GP87us7/Esv4/3mfjv/tbxj/oI9m/76DR//tbxj/7W8Y/+1vGP/tbxj/7W8Y/+xvGL//gAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJ5MqQfxur/N7vS/+1vGP/tbxj/7W8Y/+1v
        GP/tbxj/0Xs1/xLM+f8SzPn/Esz5/6eMX//tbxj/0Hs1/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+xv
        F3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADybxQneKCP/hLM+f8uv9v/7W8Y/+1v
        GP/tbxj/7W8Y/+1vGP/mcR7/GMny/xLM+f8SzPn/N7vS/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1v
        GP/tbxj/7G4Y9fNtGBUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOhxGpogxen/Esz5/zq6
        z//tbxj/7W8Y/+1vGP/tbxj/7W8Y/5yQav8SzPn/Esz5/xLM+f8kxOb/2Xcr/+1vGP/tbxj/7W8Y/+1v
        GP/tbxj/7W8Y/+1vGP+jjmP/7G4XeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAABrIhZ8RLM
        +f8jxeb/zHw4/+1vGP/tbxj/7W8Y/4+Wd/+Nl3n/W62u/xLM+f8SzPn/Esz5/xLM+f9dq6v/7W8Y/6WN
        Yf+wiVf/7W8Y/+1vGP+bkWz/xn8//7eGT//rbxfPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPFx
        FSR0opP/GMny/+JzIf/tbxj/7W8Y/+1vGP+8hEr/Esz5/xLM+f8SzPn/Esz5/xLM+f8SzPn/Esz5/ze7
        0v+ijmP/Esv4/xLM+f+/gkb/5XIf/zK+2P+yh1T/1ngu/6eMXv7/AAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7nAWO0S2xP9rppz/7W8Y/+1vGP/tbxj/7W8Y/4Sbgv8SzPn/Esz5/xLM+f8SzPn/Esz5/xLM
        +f9GtcL/YKqo/zS91v8SzPn/Esz5/0O2xf9JtcD/Esz5/4uYfP9GtcL/c6KU/+1tEhwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADsbhZRPbrM/+FzJP/tbxj/7W8Y/+1vGP/tbxj/sodU/xLM+f8SzPn/Esz5/xLM
        +f8SzPn/Esz5/4Oag/8SzPn/Esz5/xLM+f8SzPn/Esz5/xLM+f8SzPn/Esz5/xLM+f9jqaX/8G4UMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO9vF06Yk2//7W8Y/+1vGP/tbxj/7W8Y/+1vGP/qcBr/a6ac/xLM
        +f8SzPn/L7/a/xfK8/9GtcH/Hsbr/xLM+f8SzPn/QrfG/xLM+f8SzPn/Esz5/xLM+f8SzPn/Esz5/3Gj
        l//ubBctAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA728VPoWagf/tbxj/7W8Y/+1vGP/tbxj/7W8Y/9N5
        M/8cyO//eaCO/z64yf9Osrv/eaCO/+xvGP+riVn/eaCN/4ObhP9hqqf/Esz5/xLM+f8SzPn/Esz5/xLM
        +f8SzPn/iJp//+9rGR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwaQ8Rm5Bq/N91Jv/tbxj/7W8Y/+1v
        GP/tbxj/3HUp/0S2xP8Uyvb/L7/a/xLM+f8SzPn/QbjI/yjD4v+BnIf/HMjv/xLM+f8SzPn/Esz5/xLM
        +f8SzPn/Esz5/xLM+f+silnt/wAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCnITQW6yt/+lw
        G//tbxj/7W8Y/+1vGP/tbxj/x34+/zO91/8SzPn/Esz5/xLM+f8SzPn/Esz5/0+xuf9eq6n/Esz5/xLM
        +f8SzPn/Esz5/xLM+f8SzPn/G8jw/+lyGpQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM1+
        NWEdx+3/W62u/5CWdv/tbxj/7W8Y/+1vGP/tbxj/33Um/xLM+f8SzPn/Esz5/xLM+f8SzPn/RrXC/zu5
        zf8SzPn/Esz5/xLM+f8SzPn/Esz5/xLM+f9brK3/7nAWOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/2YABXWglPASzPn/Esz5/0O2xf/tbxj/3HUp/8p9Ov/sbxj/T7K5/xLM+f8SzPn/Esz5/xLM
        +f+Qlnb/gJ2H/1Owtv8SzPn/Esz5/xLM+f8SzPn/E8v3/7qES9IAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA0Hs2USbD5P9HtcH/PLnN/+1vGP/LfTn/OrrP/0m1wP/Hfjz/tYZR/8WA
        QP+6hEz/f52J/9V5MP/tbxj/toZQ/7CIVv+xiFX/gZyG/yfC4/92oJD98HAUMgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAp4tcoBvI8P9FtsP/woBD/+1vGP+bkWz/SLTB/22l
        m//tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/1Xgv/95zI20AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAACmZJtypuRa//kciD/7W8Y/+1v
        GP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbhebAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAAE43Igr+1v
        GP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7m8XkwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/AAAB7m4WaO1uGOPtbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7W8Y/+1vGP/tbxj/7G8Y2O1v
        F1cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AABO1vGFXtbhir7G4Y9+1vGP/tbxj/7W8Y/+1vGP/tbxfw7G8Yoe5w
        FUn/AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/VQAD62wUGuxvGDXvbRUx9G8WF/8A
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////Af///AA///AAH//gAAf/wAAD/4AAAf+AAAH/AA
        AA/wAAAP4AAAD+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB/AAAA/wAAAP8AAAH/gAAB/8AAA//AAAf/4A
        AP//AAH//8AD///4H/////////////////8=
</value>
  </data>
</root>